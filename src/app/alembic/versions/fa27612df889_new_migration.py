"""New Migration

Revision ID: fa27612df889
Revises: 
Create Date: 2024-04-22 18:12:51.807527

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'fa27612df889'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('daily_product_revenue')
    op.drop_table('products')
    op.drop_table('orders')
    op.drop_table('order_items')
    op.drop_table('departments')
    op.drop_table('daily_revenue')
    op.drop_table('neworderjoin')
    op.drop_table('customers_ex')
    op.alter_column('categories', 'category_department_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('categories', 'category_name',
               existing_type=sa.VARCHAR(length=45),
               nullable=True)
    op.create_index(op.f('ix_categories_category_id'), 'categories', ['category_id'], unique=False)
    op.alter_column('customers', 'customer_fname',
               existing_type=sa.VARCHAR(length=45),
               nullable=True)
    op.alter_column('customers', 'customer_lname',
               existing_type=sa.VARCHAR(length=45),
               nullable=True)
    op.alter_column('customers', 'customer_email',
               existing_type=sa.VARCHAR(length=45),
               nullable=True)
    op.alter_column('customers', 'customer_password',
               existing_type=sa.VARCHAR(length=45),
               nullable=True)
    op.alter_column('customers', 'customer_street',
               existing_type=sa.VARCHAR(length=255),
               nullable=True)
    op.alter_column('customers', 'customer_city',
               existing_type=sa.VARCHAR(length=45),
               nullable=True)
    op.alter_column('customers', 'customer_state',
               existing_type=sa.VARCHAR(length=45),
               nullable=True)
    op.alter_column('customers', 'customer_zipcode',
               existing_type=sa.VARCHAR(length=45),
               nullable=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('customers', 'customer_zipcode',
               existing_type=sa.VARCHAR(length=45),
               nullable=False)
    op.alter_column('customers', 'customer_state',
               existing_type=sa.VARCHAR(length=45),
               nullable=False)
    op.alter_column('customers', 'customer_city',
               existing_type=sa.VARCHAR(length=45),
               nullable=False)
    op.alter_column('customers', 'customer_street',
               existing_type=sa.VARCHAR(length=255),
               nullable=False)
    op.alter_column('customers', 'customer_password',
               existing_type=sa.VARCHAR(length=45),
               nullable=False)
    op.alter_column('customers', 'customer_email',
               existing_type=sa.VARCHAR(length=45),
               nullable=False)
    op.alter_column('customers', 'customer_lname',
               existing_type=sa.VARCHAR(length=45),
               nullable=False)
    op.alter_column('customers', 'customer_fname',
               existing_type=sa.VARCHAR(length=45),
               nullable=False)
    op.drop_index(op.f('ix_categories_category_id'), table_name='categories')
    op.alter_column('categories', 'category_name',
               existing_type=sa.VARCHAR(length=45),
               nullable=False)
    op.alter_column('categories', 'category_department_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.create_table('customers_ex',
    sa.Column('customer_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('customer_fname', sa.VARCHAR(length=45), autoincrement=False, nullable=True),
    sa.Column('customer_lname', sa.VARCHAR(length=45), autoincrement=False, nullable=True),
    sa.Column('customer_street', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('customer_city', sa.VARCHAR(length=45), autoincrement=False, nullable=True),
    sa.Column('customer_state', sa.VARCHAR(length=45), autoincrement=False, nullable=True),
    sa.Column('customer_zipcode', sa.VARCHAR(length=45), autoincrement=False, nullable=True)
    )
    op.create_table('neworderjoin',
    sa.Column('order_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('order_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('order_customer_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('order_status', sa.VARCHAR(length=45), autoincrement=False, nullable=True),
    sa.Column('order_item_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('order_item_order_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('order_item_product_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('order_item_quantity', sa.INTEGER(), autoincrement=False, nullable=True)
    )
    op.create_table('daily_revenue',
    sa.Column('order_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('order_revenue', sa.NUMERIC(), autoincrement=False, nullable=True)
    )
    op.create_table('departments',
    sa.Column('department_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('department_name', sa.VARCHAR(length=45), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('department_id', name='departments_pkey')
    )
    op.create_table('order_items',
    sa.Column('order_item_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('order_item_order_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('order_item_product_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('order_item_quantity', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('order_item_subtotal', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('order_item_product_price', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('order_item_id', name='order_items_pkey')
    )
    op.create_table('orders',
    sa.Column('order_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('order_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('order_customer_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('order_status', sa.VARCHAR(length=45), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('order_id', name='orders_pkey')
    )
    op.create_table('products',
    sa.Column('product_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('product_category_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('product_name', sa.VARCHAR(length=45), autoincrement=False, nullable=False),
    sa.Column('product_description', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('product_price', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('product_image', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('product_id', name='products_pkey')
    )
    op.create_table('daily_product_revenue',
    sa.Column('order_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('order_item_product_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('order_revenue', sa.NUMERIC(), autoincrement=False, nullable=True)
    )
    # ### end Alembic commands ###
